{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pubana/frondweb/sitemicro/pages/random/index.js\";\nimport Head from 'next/head';\nimport Link from 'next/link';\n\nfunction Random({\n  data\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Micro | Random\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mt-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-6xl\",\n        children: \"Fetching random words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), data.map(todo => {\n        var _todo$title;\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [(_todo$title = todo === null || todo === void 0 ? void 0 : todo.title) !== null && _todo$title !== void 0 ? _todo$title : \"-\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/random/${todo.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: \"Launch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 102\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 69\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nRandom.getInitialProps = async () => {\n  try {\n    const data = await fetch('http://localhost:5800/courses/1').then(response => response.json()).then(json => json);\n    return {\n      data\n    };\n  } catch (error) {}\n};\n\nexport default Random;","map":{"version":3,"sources":["/Users/pubana/frondweb/sitemicro/pages/random/index.js"],"names":["Head","Link","Random","data","map","todo","title","id","getInitialProps","fetch","then","response","json","error"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,MAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAAwB;AAEpB,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAMQA,IAAI,CAACC,GAAL,CAAUC,IAAI,IAAI;AAAA;;AAClB,4BAAO;AAAA,oCAAqBA,IAArB,aAAqBA,IAArB,uBAAqBA,IAAI,CAAEC,KAA3B,qDAAoC,GAApC,oBAAyC,QAAC,IAAD;AAAM,YAAA,EAAE,EAAI,WAAUD,IAAI,CAACE,EAAG,EAA9B;AAAA,mCAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAAzC;AAAA,WAAUF,IAAI,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEC,OAHD,CANR;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AAoBH;;AAEDL,MAAM,CAACM,eAAP,GAAyB,YAAY;AACjC,MAAI;AACA,UAAML,IAAI,GAAG,MAAMM,KAAK,CAAC,iCAAD,CAAL,CAClBC,IADkB,CACbC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADC,EAElBF,IAFkB,CAEbE,IAAI,IAAIA,IAFK,CAAnB;AAGA,WAAO;AAAET,MAAAA;AAAF,KAAP;AACH,GALD,CAKE,OAAOU,KAAP,EAAc,CAEf;AACJ,CATD;;AAYA,eAAeX,MAAf","sourcesContent":["import Head from 'next/head'\nimport Link from 'next/link'\n\nfunction Random({data}) {\n    \n    return (\n        <>\n            <Head>\n                <title>Micro | Random</title>\n            </Head>\n\n            <main className=\"container mt-12\">\n                <h1 className=\"text-6xl\">\n                    Fetching random words\n                </h1>\n\n                {\n                    data.map( todo => {\n                    return <li key= {todo.id} >{todo?.title ?? \"-\"} <Link to ={`/random/${todo.id}`}><a>\n                        Launch</a></Link></li>\n                    })\n                }\n            </main>\n        </>\n    )\n}\n\nRandom.getInitialProps = async () => {\n    try {\n        const data = await fetch('http://localhost:5800/courses/1')\n        .then(response => response.json())\n        .then(json => json)\n        return { data }\n    } catch (error) {\n        \n    }\n}\n\n\nexport default Random"]},"metadata":{},"sourceType":"module"}