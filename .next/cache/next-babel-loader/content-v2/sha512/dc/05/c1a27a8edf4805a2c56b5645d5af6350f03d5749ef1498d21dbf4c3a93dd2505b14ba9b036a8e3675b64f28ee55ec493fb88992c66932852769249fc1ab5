{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pubana/frondweb/sitemicro/pages/random/[id].js\";\nimport Head from 'next/head';\nimport React from 'react';\nexport default function Todo(_ref) {\n  var data = _ref.data;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Micro | random\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mt-12 mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl\",\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = Todo;\nTodo.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var id, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(props);\n          id = props.query.id;\n          _context.prev = 2;\n          _context.next = 5;\n          return fetch(\"https://jsonplaceholder.typicode.com/todos/\".concat(id)).then(function (response) {\n            return response.json();\n          }).then(function (json) {\n            return json;\n          });\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](2);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[2, 9]]);\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/pubana/frondweb/sitemicro/pages/random/[id].js"],"names":["Head","React","Todo","data","title","getInitialProps","console","log","props","id","query","fetch","then","response","json"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACC,eAAe,SAASC,IAAT,OAAwB;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACnC,sBACI;AAAA,4BACG,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH,eAKG;AAAM,MAAA,SAAS,EAAC,yBAAhB;AAAA,6BACP;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,kBAA0BA,IAAI,CAACC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA,YALH;AAAA,kBADJ;AAWH;KAZuBF,I;AAcxBA,IAAI,CAACG,eAAL,yEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,UAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACOC,UAAAA,EAFY,GAEND,KAAK,CAACE,KAFA,CAEZD,EAFY;AAAA;AAAA;AAAA,iBAIGE,KAAK,sDAA+CF,EAA/C,EAAL,CAClBG,IADkB,CACb,UAAAC,QAAQ;AAAA,mBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,WADK,EAElBF,IAFkB,CAEb,UAAAE,IAAI;AAAA,mBAAIA,IAAJ;AAAA,WAFS,CAJH;;AAAA;AAIVX,UAAAA,IAJU;AAAA,2CAOT;AAAEA,YAAAA,IAAI,EAAJA;AAAF,WAPS;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import Head from 'next/head'\nimport React from 'react'\n export default function Todo({ data }) {\n     return (\n         <>\n            <Head>\n                <title>Micro | random</title>\n            </Head>\n\n            <main className=\"container mt-12 mx-auto\">\n     <h1 className=\"text-3xl\">{data.title}</h1>\n            </main>\n         </>\n     );\n }\n\n Todo.getInitialProps = async () => {\n     console.log(props)\n     const {id} = props.query;\n    try {\n        const data = await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`)\n        .then(response => response.json())\n        .then(json => json)\n        return { data }\n    } catch (error) {\n        \n    }\n}"]},"metadata":{},"sourceType":"module"}