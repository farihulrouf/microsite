{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport React from 'react';\nexport default function Todo(_ref) {\n  var data = _ref.data;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Micro | random\"\n      })\n    }), /*#__PURE__*/_jsxs(\"main\", {\n      className: \"container mt-12 mx-auto\",\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        className: \"text-3xl\",\n        children: data.title\n      }), /*#__PURE__*/_jsx(\"p\", {\n        children: \"Please complete your task\"\n      }), /*#__PURE__*/_jsx(Link, {\n        href: \"/random\",\n        children: /*#__PURE__*/_jsx(\"a\", {\n          children: \"Bring me to random page\"\n        })\n      })]\n    })]\n  });\n}\n\nTodo.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n    var id, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(props);\n            id = props.query.id;\n            _context.prev = 2;\n            _context.next = 5;\n            return fetch(\"https://jsonplaceholder.typicode.com/todos/\".concat(id)).then(function (response) {\n              return response.json();\n            }).then(function (json) {\n              return json;\n            });\n\n          case 5:\n            data = _context.sent;\n            return _context.abrupt(\"return\", {\n              data: data\n            });\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](2);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 9]]);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}