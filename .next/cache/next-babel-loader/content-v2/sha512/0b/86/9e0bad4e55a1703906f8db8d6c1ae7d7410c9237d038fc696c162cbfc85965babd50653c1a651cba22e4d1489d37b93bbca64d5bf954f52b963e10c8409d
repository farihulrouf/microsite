{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pubana/frondweb/sitemicro/pages/random/[id].js\";\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport React from 'react';\nexport default function Todo({\n  data\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Micro | random\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mt-12 mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl\",\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please complete your task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/random\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"Bring me to random page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nTodo.getInitialProps = async props => {\n  console.log(props);\n  const {\n    id\n  } = props.query;\n\n  try {\n    const data = await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`).then(response => response.json()).then(json => json);\n    return {\n      data\n    };\n  } catch (error) {}\n};","map":{"version":3,"sources":["/Users/pubana/frondweb/sitemicro/pages/random/[id].js"],"names":["Head","Link","React","Todo","data","title","getInitialProps","props","console","log","id","query","fetch","then","response","json","error"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACC,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AACnC,sBACI;AAAA,4BACG,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH,eAKG;AAAM,MAAA,SAAS,EAAC,yBAAhB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,kBAA0BA,IAAI,CAACC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAA,+BAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALH;AAAA,kBADJ;AAaH;;AAEDF,IAAI,CAACG,eAAL,GAAuB,MAAOC,KAAP,IAAiB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM;AAACG,IAAAA;AAAD,MAAOH,KAAK,CAACI,KAAnB;;AACD,MAAI;AACA,UAAMP,IAAI,GAAG,MAAMQ,KAAK,CAAE,8CAA6CF,EAAG,EAAlD,CAAL,CAClBG,IADkB,CACbC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADC,EAElBF,IAFkB,CAEbE,IAAI,IAAIA,IAFK,CAAnB;AAGA,WAAO;AAAEX,MAAAA;AAAF,KAAP;AACH,GALD,CAKE,OAAOY,KAAP,EAAc,CAEf;AACJ,CAXA","sourcesContent":["import Head from 'next/head'\nimport Link from 'next/link'\nimport React from 'react'\n export default function Todo({ data }) {\n     return (\n         <>\n            <Head>\n                <title>Micro | random</title>\n            </Head>\n\n            <main className=\"container mt-12 mx-auto\">\n                <h1 className=\"text-3xl\">{data.title}</h1>\n                <p>Please complete your task</p>\n                <Link href='/random'><a>Bring me to random page</a></Link>\n            </main>\n         </>\n     );\n }\n\n Todo.getInitialProps = async (props) => {\n     console.log(props)\n     const {id} = props.query;\n    try {\n        const data = await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`)\n        .then(response => response.json())\n        .then(json => json)\n        return { data }\n    } catch (error) {\n        \n    }\n}"]},"metadata":{},"sourceType":"module"}