{"ast":null,"code":"import axios from 'axios';\nimport errorHandler from '../errorHandler';\nvar instance = axios.create({\n  baseURL: \"\".concat(process.env.NEXT_PUBLIC_API_HOST)\n});\ninstance.interceptors.response.use(function (response) {\n  return response.data;\n}, errorHandler);\nexport default instance;","map":{"version":3,"sources":["/Users/pubana/frondweb/microsite/src/configs/axios/index.js"],"names":["axios","errorHandler","instance","create","baseURL","process","env","NEXT_PUBLIC_API_HOST","interceptors","response","use","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,IAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC1BC,EAAAA,OAAO,YAAKC,OAAO,CAACC,GAAR,CAAYC,oBAAjB;AADmB,CAAb,CAAjB;AAIAL,QAAQ,CAACM,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CAAoC,UAACD,QAAD;AAAA,SAAcA,QAAQ,CAACE,IAAvB;AAAA,CAApC,EAAiEV,YAAjE;AAEA,eAAeC,QAAf","sourcesContent":["import axios from 'axios'\nimport errorHandler from '../errorHandler'\nconst instance = axios.create({\n    baseURL: `${process.env.NEXT_PUBLIC_API_HOST}`\n});\n\ninstance.interceptors.response.use( (response) => response.data, errorHandler)\n\nexport default instance"]},"metadata":{},"sourceType":"module"}