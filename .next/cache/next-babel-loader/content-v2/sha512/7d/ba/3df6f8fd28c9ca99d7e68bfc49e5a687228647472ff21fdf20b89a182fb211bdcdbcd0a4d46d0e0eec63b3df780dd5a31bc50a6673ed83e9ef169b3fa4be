{"ast":null,"code":"import axios from 'axios';\nimport errorHandler from './errorHandler';\nconst instance = axios.create({\n  baseURL: `${process.env.NEXT_PUBLIC_API_HOST}`\n});\ninstance.interceptors.response.use(response => response.data, errorHandler);\nexport default instance;","map":{"version":3,"sources":["/Users/pubana/frondweb/microsite/src/configs/axios/index.js"],"names":["axios","errorHandler","instance","create","baseURL","process","env","NEXT_PUBLIC_API_HOST","interceptors","response","use","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,oBAAqB;AADnB,CAAb,CAAjB;AAIAL,QAAQ,CAACM,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CAAqCD,QAAD,IAAcA,QAAQ,CAACE,IAA3D,EAAiEV,YAAjE;AAEA,eAAeC,QAAf","sourcesContent":["import axios from 'axios'\nimport errorHandler from './errorHandler'\nconst instance = axios.create({\n    baseURL: `${process.env.NEXT_PUBLIC_API_HOST}`\n});\n\ninstance.interceptors.response.use( (response) => response.data, errorHandler)\n\nexport default instance"]},"metadata":{},"sourceType":"module"}