{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Head from 'next/head';\nimport Link from 'next/link';\n\nfunction Random(_ref) {\n  var data = _ref.data;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Micro | Random\"\n      })\n    }), /*#__PURE__*/_jsxs(\"main\", {\n      className: \"container mt-12 mx-auto\",\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        className: \"text-3xl\",\n        children: \"Fetching random words\"\n      }), /*#__PURE__*/_jsx(\"ul\", {\n        children: data.map(function (todo) {\n          var _todo$title;\n\n          return /*#__PURE__*/_jsxs(\"li\", {\n            className: \"border border-indigo-700 p-4\",\n            children: [(_todo$title = todo === null || todo === void 0 ? void 0 : todo.title) !== null && _todo$title !== void 0 ? _todo$title : \"-\", \" \", /*#__PURE__*/_jsx(Link, {\n              href: \"/random/\".concat(todo.id),\n              children: /*#__PURE__*/_jsx(\"a\", {\n                children: \"Lauch\"\n              })\n            })]\n          }, todo.id);\n        })\n      })]\n    })]\n  });\n}\n\nRandom.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch('https://jsonplaceholder.typicode.com/todos').then(function (response) {\n            return response.json();\n          }).then(function (json) {\n            return json;\n          });\n\n        case 3:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[0, 7]]);\n}));\nexport default Random;","map":null,"metadata":{},"sourceType":"module"}